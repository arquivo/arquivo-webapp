<?xml version="1.0" encoding="UTF-8"?>
<project>
  <!-- the version of maven's project object model -->
  <pomVersion>3</pomVersion>

  <!-- a unique name for this project -->
  <id>infiniteurl</id>

  <!-- a short but descriptive name for the project -->
  <name>Infinite URLs Webapp</name>

  <!-- The version of the project under development, e.g.
       1.1, 1.2, 2.0-SNAPSHOT -->
  <currentVersion>0.0.1${version.build.suffix}</currentVersion>
 
  <!-- details about the organization that 'owns' the project -->
  <organization>
    <name>Internet Archive</name>
    <url>http://www.archive.org/</url>
    <logo>http://www.archive.org/images/logo.jpg</logo>
  </organization>

  <inceptionYear>2004</inceptionYear>
  <package>org.archive.access.infiniteurl</package>
  <logo />
  <description>A webapp that continually generates new URLs. Use it on a host
  that has been dns wildcarded (i.e. Its been set so that any subdomain
  will return the domains IP).  
  Default settings put up a seed page of 200 URLs. Eeach URL is on a subdomain
  of the accessed domain.  Each URL points at a page that will have
  ten new URLs in it; each access gets a new set of ten new URLs.
  Every ten seconds a new subdomain will be introduced.  Edit the JSP page
  infiniteurls.jsp to change rate of new server introduction
  and the amount of links per page.  Checkout this project and build 
  with maven using the 'war' target to generate the war file in the target
  directory.  Place the webapp under the tomcat, Jetty, etc., webapp directory.
  Point the crawler at the deployed webapp and let it run.
  This webapp is used testing Heritrix.
  </description>

  <shortDescription>URL generator to keep a crawler busy.</shortDescription>

  <url>http://archive-access.sourceforge.net/projects/infiniteurl/</url>

  <issueTrackingUrl>http://sourceforge.net/tracker/?group_id=118427
  </issueTrackingUrl>
  <siteAddress />
  <siteDirectory>/home/groups/a/ar/archive-archive/htdocs/</siteDirectory>
  <distributionDirectory />

  <!-- the version control repository and http url for online access
       the connection element has the form:
       scm:<system>:<system specific connection string> -->
    <repository>
       <connection>scm:cvs:pserver:anonymous@cvs.sourceforge.net:/cvsroot/archive-access:archive-access</connection>
        <url>http://cvs.sourceforge.net/viewcvs.py/archive-access/archive-access/projects/arc-collection-proxy/
        </url>
    </repository>

  <!-- any mailing lists for the project -->
    <mailingLists>
        <mailingList>  
            <name>Heritrix Discussion List</name>
            <subscribe>
            archive-crawler-subscribe@yahoogroups.com
            </subscribe>
            <unsubscribe>
            archive-crawler-unsubscribe@yahoogroups.com
            </unsubscribe>
            <archive>
            http://groups.yahoo.com/group/archive-crawler/
            </archive>
        </mailingList>  
    </mailingLists>
  <!-- who the developers are for the project -->

  <developers/>

    <licenses>
        <license>
            <name>GNU LESSER GENERAL PUBLIC LICENSE</name>
            <url>http://www.gnu.org/licenses/lgpl.txt</url>
            <distribution>repo</distribution>
       </license>
    </licenses>

  <!-- jar files the project is dependent on -->
  <dependencies>
        <dependency>
            <id>servlet</id>
            <version>2.3</version>
            <url>http://jakarta.apache.org/tomcat/</url>
            <properties>
                <description>
                Taken from tomcat.
                </description>
                <license>
                    http://jakarta.apache.org/site/legal.html
                </license>
            </properties>
        </dependency>
  </dependencies>

  <!-- build information for the project -->
  <build>
    <nagEmailAddress>webmaster@crawler.archive.org</nagEmailAddress>
    <sourceDirectory>src/java</sourceDirectory>
    <unitTestSourceDirectory>src/java</unitTestSourceDirectory>
    <unitTest>
      <excludes>
        <exclude>**/*SelfTest.java</exclude>
      </excludes>
      <includes>
        <include>**/*Test.java</include>
      </includes>
    </unitTest>
    <resources>
    <resource>
        <directory>${basedir}/src/resources</directory>
        <includes>
            <include>*.xsl</include>
        </includes>
    </resource>
    </resources>
  </build>
    <!--List of reports to generate.
        Some are not working.  Fix.
     -->
    <reports>
        <!--Use the heritrix javadoc goal rather than the default
            maven javadoc plugin.  The latter doesn't copy over doc-files
            nor package.html files.
          -->
        <report>maven-license-plugin</report>
        <!--Takes a long time. No one looks at it.  Comment in when wanted.
        <report>maven-changelog-plugin</report>
        <report>maven-checkstyle-plugin</report>
        -->
        <!--
        <report>maven-jdepend-plugin</report>
        -->
        <report>maven-junit-report-plugin</report>
        <report>maven-jxr-plugin</report>
        <report>maven-pmd-plugin</report>
        <report>maven-tasklist-plugin</report>
        <!--<report>maven-findbugs-plugin</report>
         -->
        <!--<report>maven-developer-activity-plugin</report>-->
        <!--TODO: <report>maven-file-activity-plugin</report>-->
        <!--TODO: OOME and takes long time.
            <report>maven-linkcheck-plugin</report>
         -->
    </reports>
</project>
