<?xml version="1.0" encoding="ISO-8859-1"?>
<document>
  <properties>
    <title>Regression Tests</title>
    <author email="cathcart at archive dot org">cathcart</author>
    <revision>$Id: regress.xml 1446 2007-01-22 19:10:02Z stack-sf $</revision>
  </properties>
  <body>


<section name="Regression Tests"> 

<p>

Nutchwax has a suite of <a
href="http://en.wikipedia.org/wiki/Regression_testing">regression
tests</a>.  They reside in
<code>${NUTCHWAX}/src/regression</code>.  When run they fetch
the latest nutchwax build from the <a
href="http://builds.archive.org:8080/cruisecontrol/index.jsp">continuous
build server</a>, they also download versions of <a
href="http://lucene.apache.org/hadoop/">Hadoop</a> and <a
href="http://tomcat.apache.org/tomcat-5.0-doc/deployer-howto.html">Tomcat
deployer</a>. Then Hadoop runs Nutchwax in <a
href="http://archive-access.sourceforge.net/projects/nutch/apidocs/overview-summary.html#getting_started">
standalone mode</a> and indexes some test arcs. Tomcat deployer
uploads the nutchwax war to a specified tomcat server. Then we run a
series of regression checks against the deployed Nutchwax. 

</p>
</section>

<section name="Requirements">

<ul>

	<li>0.8 Nutchwax <b>source</b> or a later 
    <a href="http://sourceforge.net/svn/?group_id=118427">svn checkout</a></li>
	<li><b>Java 1.5x</b></li>
	<li>A running <b>Tomcat 5.5</b> or greater</li>
	<li><b>Standard UNIX environment:</b> <code>sh, which, echo, basename,
awk, gnu tar, getopt, lynx, wget, cut, dirname, zegrep</code>.</li>

</ul>
<p>NOTE: Later debians (unstable) -- including ubuntu 6.10 -- have <code>/bin/sh</code>
linked to <a href="http://gondor.apana.org.au/~herbert/dash/">dash</a>.  The
recursion test scripts will not work with dash and hadoop start scripts use
<code>source</code> which is unimplemented in dash.</p>

</section>

<section name="Usage">

<p>Get a copy of nutchwax <a href="http://sourceforge.net/svn/?group_id=118427">source</a>. Edit
<code>${NUTCHWAX}/src/regression/nutchwax_test_config</code> to match
your local config. Run
<code>${NUTCHWAX}/src/regression/nutchwax_regress.sh
${NUTCHWAX}/src/regression/nutchwax_test_config</code>. For
more verbose output use the <code>-v</code> switch (Recommended).</p>

</section>


<section name="Configuration"> 
<p>

Parameters for the regression tests are read from a config file like
<code>${NUTCHWAX}/src/regression/nutchwax_test_config</code>.
This is a fragment of a shell script. All the scripts in
<code>${NUTCHWAX}/src/regression</code> take the location of the
config file as an argument. If omitted the current directory is
searched for <code>nutchwax_test_config</code>.
</p>

<ul>

	<li><b><code>WORKING_DIR</code></b> - This specifies the path
all files will be written to.</li>

	<li><b><code>NUTCHN</code></b> - URL to cruise control
continuous build server, no need to change.</li>

	<li><b><code>HADOOP_VER</code>, <code>HADOOP_URL</code>
</b> - Version of hadoop to use, may change between releases. </li>

	<li><b><code>TOMACT_VER</code>,
<code>TOMCAT_DURL</code></b> - Version of tomcat deployer to
use, should be the same as the version of tomcat you intend to deploy
to.</li>

	<li><b><code>cat > $WORKING_DIR/deployer.properties</code></b>
- this is an inline copy of the deployer.properties used for tomcat.
It is read by tomcat deployer and parse by some regression scripts.
<code>username</code> and <code>password</code> should be
changed to equal the username and password used to log into the
management interface of your tomcat server. <code>url</code> is
the URL used to access the management interface of your tomcat server.
<code>path</code> and <code>webapp</code> can be set to
anything. Any extra parameters specified will be read by tomcat
deployer. </li>

	<li><b><code>ARCS</code></b> - List of arcs to index.  Extra
arcs may be added separated by spaces. Extra arcs will be run through
the same set of regression tests.</li>

	<li><b><code>HADOOP_HEAPSIZE</code></b> - Tuning var used for
machines with low memory.</li>

	<li><b><code>TAR</code></b> - Used to specify a different
version of tar (eg. <code>gtar</code>)</li>
	<li><b><code>ANT</code></b> - Used to specify ant.</li>

</ul>

 
</section>

<section name="Scripts">

<ul>

<li><b><code>nutchwax_regress.sh</code></b> - Run
<code>nutchwax_deploy.sh</code> then <code>nutchwax_check_*</code>.
<code> -t</code> (test only) omitts running
<code>nutchwax_deploy.sh</code>.</li>

<li><b><code>nutchwax_deploy.sh</code></b> - Get and deploy the latest
build of nutchwax to a tomcat server.</li>

<li><b><code>nutchwax_check_all_urls.sh</code></b> - Test all
documents in specified arcs are searchable (rss and html) and return
only a single match via <code>exacturl:</code> keyword .</li>

<li><b><code>nutchwax_check_arcname.sh</code></b> - Check queries of
the form '<code>exacturl:someurl
arcname:name_of_arc_containing_someurl</code>' work.</li>

<li><b><code>nutchwax_check_collection.sh</code></b> - Check queries
of the form '<code>exacturl:someurl collection:test-collection</code>'
work.</li>

<li><b><code>nutchwax_check_date.sh</code></b> - Check queries of the
form '<code>exacturl:someurl date:arcdate_of_url</code>' and
'<code>exacturl:someurl date:arc_daterange_of_entire_arc</code>'
work.</li>

<li><b><code>nutchwax_check_types.sh</code></b> - Test all content
types in specified arcs are searchable (rss and html) return the
correct number of matches via <code>type:</code> keyword and .</li>

</ul>
<p>

All scripts take the same arguments (location of config file) and a
verbose switch. A <code>-v</code> will make the script verbose,
without a <code>-v</code> scripts will only output errors to
<code>STDERR</code>. 

</p>

</section>

<section name="TODO">
<p>The below needs to be built into the regression test:</p>
<ul>
<li>Check all documents in arc searchable via exacturl
</li>
<li>Check type: returns the correct number of documents (doesnt work with more than one arc currently - combine with arcname
</li>
<li>Check arcname: returns the number of documents in the arc
</li>
<li>Other keywords specified in nutchwax faqâ€‰
</li>
<li>Ranking tests.
</li>
</ul>

</section>

</body>
</document>

